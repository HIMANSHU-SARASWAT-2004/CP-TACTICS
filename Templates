#include <bits/stdc++.h>

// अहं कृत्स्नस्य जगतः प्रभवः प्रलयस्तथा ।।6।।

using namespace std;

#define IOS                       \
    ios_base::sync_with_stdio(0); \
    cin.tie(0);                   \
    cout.tie(0);
#define endl "\n"
#define int long long
typedef unsigned long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<string, string> pss;
typedef vector<pair<int, int>> vpii;
typedef vector<pair<ll, ll>> vpll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<pii> vii;
typedef vector<ll> vl;
typedef vector<vl> vvl;
#define fi first
#define se second
#define all(arr) arr.begin(), arr.end()
#define MP make_pair
#define pb push_back
#define repeat(i, st, n) for (int i = st; i < n; i++)
const int mod = 1e9 + 7;
void print(vi &v)
{
    for (auto it : v)
        cout << it << " ";
    cout << endl;
}
void solve()
{
}

signed main()
{
    IOS

#ifndef ONLINE_JUDGE
        freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif

    int t = 1;
    cin >> t;
    while (t--)
    {
        solve();
    }
    return 0;
}


OLD 
// / .........
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⢷⢤⣀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡠⠖⠢⠒⣉⠉⠒⣀⣀⡀⡀⡀⡀⡀⡀⡀⡀⡇⢰⠲⠭⡒⠤⣀⣀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠤⠢⠎⣀⣈⣰⡉⠲⠁⠂⡉⢤⠖⡒⣌⣊⡉⢄⡀⡀⡀⡀⠢⢊⢖⠖⠷⡖⣑⣺⠤⢴⠑⡩⠓⣤⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠤⠒⠃⡴⡉⠞⠘⢱⡎⢡⢸⡇⠂⡂⢸⢸⠃⡌⢠⡆⡦⠢⡙⡀⡀⡀⠨⢗⣱⣎⠭⣓⣲⡭⡓⢒⡤⠽⠶⠭⣆⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡠⠐⠚⡜⡁⡩⢆⢌⡈⡱⢃⣜⠆⠴⠡⡄⠥⡰⠎⣘⠒⡦⡘⢆⡐⠸⡒⡅⠨⣞⢤⡽⢮⣔⣋⠝⣏⢙⣄⡀⡀⡀⡀⡀⠑⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⢰⢀⡊⢉⡐⡀⡪⠥⡒⢌⠤⢇⡞⡀⡀⠏⡀⡀⠘⠁⡀⠈⠼⠚⢦⣨⣐⠢⡠⢸⠯⣉⣙⢒⢿⢭⢔⡻⠽⢞⡭⠤⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⢀⠊⡀⡇⢁⠍⠅⣁⠅⠧⠭⠁⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⢀⠮⠭⠐⠂⢸⡩⠢⢦⠈⠉⠓⠚⠦⠼⢦⣥⣙⠣⢙⣄⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡎⡰⣒⠭⣚⠔⢎⣑⡃⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⣃⡓⢸⠅⢡⣀⣄⡀⡀⡀⡀⡀⡀⡀⡀⠉⠳⣘⣳⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡠⠃⠗⠭⣂⢡⠤⡏⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⢸⡡⢊⠂⡆⡇⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠋⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⢋⣒⠨⢑⠘⠔⠉⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⢀⣀⣀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⢸⢪⢔⠅⡧⠉⢆⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⢃⢎⣉⢁⡭⢼⡀⡀⡀⡀⡀⡀⡀⡀⣀⡴⢊⣺⣻⣽⠾⣿⣆⡀⡀⡀⡀⡀⡀⡀⡀⡀⢸⠒⣎⢕⠭⡇⢸⡀⡀⡀⡀⡀⡀⣀⠤⣊⠝⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⠂⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡞⡇⣓⣉⢈⢥⠋⡀⡀⡀⡀⡀⡀⡀⡜⡜⢮⣻⡿⠁⡀⢠⣀⢿⡄⡀⡀⡀⡀⡀⡀⡀⡀⢸⡀⣸⢪⠤⠪⡄⡄⡀⡀⡠⠁⡌⣴⠁⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⢸⢰⣒⠒⢶⢇⡀⡀⡀⡀⡀⡀⡀⣰⠰⢽⣿⠛⠤⢊⣍⡖⡰⠬⢳⡀⡀⡀⡀⡀⡀⡀⡀⢸⡀⠈⢎⠭⣢⢣⢥⠒⠁⡀⠊⡌⡤⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡇⡃⠠⠌⠮⠏⡀⡀⡀⡀⡀⡀⡴⣇⠡⢽⢿⣣⡀⠉⠉⡀⠈⡋⠍⡀⡀⡀⡀⡀⡀⡀⡀⢸⣠⣲⢹⡎⠇⢻⣠⠶⠒⠋⠒⠋⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠹⠱⠢⣉⠬⣀⡀⡀⡀⡀⡀⢠⢰⢂⡞⣼⣸⢨⡀⡀⡀⠉⠕⠁⣧⡇⡀⡀⢀⠤⠒⠉⡀⡀⢟⢣⡼⠣⡜⡈⢼⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⢰⠮⡒⡍⠍⡀⡀⡀⡀⡀⡀⣇⠣⢏⠣⡅⢲⢳⡐⡀⢀⠈⠯⡀⣱⠸⡠⠊⢀⡀⡄⡀⠄⢋⢨⠶⢝⠭⠤⣱⢰⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⢪⡄⠨⢀⣠⡀⡀⡀⡀⢰⠊⡟⡜⢷⠽⢠⡀⠨⠙⠒⣶⢤⡞⡏⡇⡀⠉⢀⡴⢘⡡⣵⢫⢀⠤⢏⢒⢤⠝⡎⡀⡀⣠⢤⠤⣒⣤⠴⠤⣀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⢸⣔⢍⢘⠻⡀⡀⡀⡀⡿⣼⡘⢔⠃⣸⠾⡋⠽⣒⢞⡵⢸⡀⡀⢇⡄⢨⢓⣘⠞⠁⢸⢸⡀⠬⠋⠅⠌⢠⡀⢴⣡⠊⠼⣛⡶⢚⠏⢔⡋⣦⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠦⢪⢄⠰⢈⠁⡀⣴⢠⣞⡀⢟⡟⣥⢹⢳⡔⠵⠬⡷⡍⡘⠬⣘⠔⠊⠁⡀⡀⡀⢸⢸⢷⠔⡢⡒⡡⠃⡞⡽⡴⣳⠋⢱⣠⠥⠛⠚⠚⣆⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⢣⣄⠠⢔⢸⡶⠎⣣⠃⡄⣓⠧⠶⠶⡭⢌⢧⣘⣢⣏⢿⠁⡀⡀⡀⡀⡀⡀⡀⢸⢸⡕⢱⣑⢣⣠⣶⣿⡱⢾⡇⣮⣿⢁⠜⡠⠤⡚⣌⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠙⢭⡏⡼⡜⢮⠩⡀⣼⢡⣌⣂⢲⣓⣋⢖⠉⠞⣠⢷⠳⡀⡀⡀⡀⡀⡀⣸⣺⠬⠄⢺⠴⣡⢽⣸⡟⡜⡅⣼⣿⡃⢀⠙⢽⠇⡆⡷⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡾⠝⢠⠤⠢⢂⣝⣃⣭⡶⣣⠎⡬⣡⠑⢶⣡⣋⢝⡽⢄⡀⡀⡸⢨⠈⢸⠎⢣⠰⠂⡥⠎⠃⡇⠣⢹⢀⡔⡇⡁⡀⡀⡀⠴⠜⡇⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⢀⣫⠏⢀⠧⡊⢄⠢⢻⣩⡇⢬⢮⠏⡖⢠⡛⣴⡄⣱⣱⡃⢖⢫⡫⠍⢅⠔⢼⣇⠃⡀⡀⡀⠉⠲⡀⡀⠙⣕⢊⠷⢰⢂⢂⡀⢚⢇⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⢠⡹⠅⠂⢜⣊⠨⠰⣙⡜⣼⣌⣆⢃⠋⡴⢂⡚⢢⣌⡮⠡⡽⢸⣑⣸⣕⡴⡎⢹⡇⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡴⡄⡏⠶⠼⣣⡾⠊⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⢀⡼⡿⠒⠬⢖⢕⠭⢍⣢⢦⡓⡽⣁⣱⢁⠾⣰⢇⢋⣍⠟⢐⣝⢲⢊⡎⢹⠉⠉⡀⢸⡇⡀⡀⡀⡀⡀⡀⡀⡀⢠⢺⢿⡆⢌⠈⠋⡕⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⢀⣰⣋⠏⢈⣒⡨⠔⢃⣒⠬⢞⢊⣘⣿⡕⡠⢃⠎⣱⣳⢬⣛⢊⢺⠟⢚⡪⠎⢾⡀⡀⡀⢸⡇⡀⡀⣀⠴⠖⡒⠉⠏⠸⢷⠳⢣⡑⢤⢋⠊⣟⠒⠤⣀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⢰⢯⡾⠐⣐⡰⡤⠵⣐⠡⢔⡒⠉⢆⡵⡟⡾⡔⢇⣞⣘⢟⠼⢛⠔⡕⡧⢨⠣⢔⣸⡀⣠⠚⠉⠉⢉⡚⣼⡀⢂⢸⠈⢀⡀⢞⡀⠈⢧⡢⠘⣄⠇⠈⠁⠁⣕⠙⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⢀⢴⢋⣖⠚⠨⡁⢜⠢⡍⣰⡶⡀⠝⡠⡡⣡⢣⢸⢺⣴⣋⡥⠚⣣⢞⡥⢓⡴⢲⡎⠥⡸⠇⠖⢰⡀⣷⡀⠄⡀⢀⡀⢃⡼⣢⡀⢔⠩⣷⡀⡀⠈⢴⣎⢄⡀⣀⡀⠈⠈⠛⣄⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⣀⣺⢞⡞⠜⣐⢔⢨⠂⢙⢁⡠⡟⢍⠲⣒⡎⢂⠟⢙⢸⡭⢭⡬⣾⣋⣝⡓⠴⠬⢔⣋⡍⠉⠉⠉⢓⣢⡠⢊⣰⡀⢀⡩⠚⠶⠑⢊⠠⠐⡀⢱⢷⣤⡤⢋⣘⣗⣕⡺⡀⡀⠐⠄⡀⠢⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⢀⠴⣲⢋⡞⠽⠁⡉⣠⠱⢼⠤⡑⢅⢒⢝⡚⢚⠊⠶⣚⠩⢃⢟⡳⡭⠁⡼⢎⣚⢠⣩⡲⡚⠚⠡⡀⠄⢰⠦⣾⠔⢩⡇⠉⡀⡀⡀⡀⡇⡀⡀⡀⠔⡀⢗⢔⠴⣣⠁⡀⠙⢷⢢⠢⡀⡀⠁⠥⠽⣄⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⣠⠎⡝⣡⠺⡵⡑⠄⢸⡆⠜⢞⡒⣈⠪⠒⡙⠃⡠⣡⢊⠊⢉⢄⢳⢦⣒⣡⢏⡿⡗⢃⢦⠳⣞⣤⣀⣂⣁⣊⠤⠊⡇⡀⣽⡇⡀⡀⡀⡀⡀⢳⡀⡀⡀⡀⡀⡀⠺⠛⢠⡡⠈⢀⣺⠁⡀⠹⠭⠅⡀⡀⡀⠳⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⢒⢡⢿⣡⢛⠵⠁⡈⣋⣄⠊⠣⡓⢑⣈⠤⠛⢌⢑⠔⠔⠰⣑⠴⠒⣾⠯⣍⡮⢭⠼⡓⣼⡥⡇⣻⢦⢳⣚⡨⠽⢿⢦⠴⡠⡀⣿⡇⡀⡀⡀⡀⡀⢀⣤⣬⢴⣗⣥⣤⠤⣤⣁⣈⣀⣟⠃⡀⣠⠴⠽⢦⢀⣂⠄⡕⣟⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⠙⡾⢹⠖⣉⠅⠴⢚⣹⢶⣟⢼⣯⡰⠥⠕⣩⠢⠄⢊⡭⢢⡪⡡⢥⡙⣦⣂⡗⡞⢁⣸⡉⢩⡪⢊⠏⢿⢀⣻⣽⡛⡽⡀⡀⡀⣿⡇⡀⡀⡀⡀⡀⢸⣯⣬⢝⢗⡭⡾⡗⣝⢿⣼⣻⡽⡀⢹⡇⡇⣆⢓⢷⡒⠲⠷⠳⢤⣀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⠘⡰⢚⣪⠥⠒⢹⣛⣋⠶⢁⣐⢑⢄⢡⠖⢍⣠⠒⣜⡂⢼⢣⢝⡙⣪⢞⠎⢧⠯⡸⢇⡬⡚⡾⠘⠁⡿⢣⣷⢴⡯⢻⡀⡀⡗⡇⡀⡀⡀⡀⡀⢸⣯⣽⣸⣧⣞⣇⣸⣳⣺⡟⠋⢐⠡⣞⠷⠋⣊⠊⠒⢁⢖⠦⡩⠲⣒⣹⢦⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⠈⢔⡡⠔⣊⠭⠔⠚⣅⠔⣒⢑⠬⢚⢄⠥⡒⢬⣠⠕⢍⣘⡏⠉⡶⡥⢠⠿⢎⠡⣳⢑⢢⠁⡀⡞⣸⣉⢣⡎⡿⡇⡞⡀⡗⡇⡀⡀⡀⡀⡀⢞⡍⠏⠏⢏⣩⡭⡏⢩⠹⡀⡔⠢⠁⡀⡀⠠⡀⡀⣰⣣⠁⡀⡇⠐⡂⠄⡀⡆⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⠣⠰⡒⡩⠔⣒⠭⣖⢭⢬⠃⣁⢠⠒⢉⡢⠕⠥⣀⠩⣵⠯⣆⣰⢯⣲⢭⡠⠤⠎⡟⡀⣰⡌⠕⡜⡓⣇⠨⢹⣤⡇⡗⡇⡀⡀⡀⡀⢎⡱⡼⣞⠞⠇⠃⠃⡇⢹⠈⠄⠲⠛⡀⡀⣊⠊⡀⡜⡴⡀⡀⡀⢻⣐⢑⡀⡇⡇⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⠙⣋⠥⣚⠭⢒⣛⢌⢚⢑⠧⠺⢯⣁⢥⣨⡱⢿⣓⣒⠂⢨⠪⢐⣏⡾⢘⡚⣯⡀⡀⠑⡞⢨⢯⢑⣹⡜⡼⢣⡀⣷⡇⡀⡀⢀⠃⡏⠃⢁⢰⢸⠠⡀⡀⢇⡀⠈⡘⠂⡀⢀⡪⡈⠐⡸⡼⡠⡀⡀⡀⢸⣮⡭⣭⣥⡇⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⠙⣕⢊⠭⢲⡪⢖⠑⣀⠏⡏⣥⣶⢙⠬⢸⠏⡏⢅⣰⢺⡣⠖⡟⡸⡥⡎⡅⡀⣾⣼⠰⣾⡄⠎⠧⡐⡷⡿⠠⣿⡇⡀⢀⠋⢸⢸⠨⢸⢸⢸⡀⡀⢇⠘⡀⡐⡏⡀⠠⡎⢱⡀⡀⣵⡢⢄⡀⡀⡀⢸⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠑⢕⠩⢔⣉⡠⢖⡉⠔⣨⠕⣎⢔⠚⣤⣰⠞⠌⢸⢩⢟⠩⢊⢏⢹⡀⢀⠁⠟⢢⣇⢈⣺⡜⢱⡇⠃⡀⣿⡇⡀⢇⡀⡏⠸⠰⢸⠸⢀⡀⣇⠈⡀⡀⡰⠂⡒⢰⠄⠦⡂⢸⠃⢹⠁⠂⡀⡀⡜⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠈⢦⢱⡊⢅⣡⠔⠣⡱⠙⢕⣜⡾⢷⠷⡃⡼⢸⠸⣢⣃⣜⡇⡀⡞⡼⠈⢇⡘⣰⡆⠰⣔⣧⡀⡀⣿⡇⢰⢔⠕⠃⡀⣍⢺⡀⣎⡽⡀⡀⡀⡀⣁⠈⢔⠅⡀⠉⠁⡟⣼⡏⠠⠪⡀⡀⠇⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠘⡬⡖⢝⡨⣒⡩⣢⠅⡚⡏⢴⡚⣣⡌⣢⠚⣘⣡⢡⡀⢀⣡⢁⢛⠢⣱⢥⢨⢿⢁⡏⡀⡀⡷⡇⢧⠑⠁⡇⡀⡀⠸⡀⡀⣅⡀⡀⡀⡀⣚⡱⡀⠈⢤⠁⢀⢁⣻⢷⠂⣐⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠑⢖⠬⣚⡚⢉⢸⢀⣧⢓⢳⣛⢩⢇⡁⠖⡨⡼⡀⡼⡅⢛⡝⣱⠅⢡⡻⢈⣹⠁⡀⡀⡗⣷⠴⠁⡀⢡⡀⡀⡀⡀⡤⣒⢤⡀⡀⡀⡀⡀⢤⠐⡀⠙⡞⢿⠃⠊⡐⡕⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠓⢬⢡⣿⢰⡽⣠⡰⣘⠬⢺⢥⡵⣃⡇⡀⢃⡞⠣⡔⡃⢴⠊⣰⣼⢺⡀⡀⡀⡇⡇⠕⢀⡀⠄⡀⠠⡀⠱⢧⠥⡀⠑⡀⡀⡀⣄⡀⠈⠦⡰⠒⠞⢆⠠⡰⠐⠂⣸⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠈⡯⡕⠇⢀⠂⡐⢡⡜⡳⢞⠗⡀⢰⢣⣠⠃⣾⡻⠃⢞⣼⣱⢸⡀⡀⡀⣧⠜⠔⢀⢈⡀⡀⡀⡀⠁⢘⡀⡀⡀⡀⡀⡀⡀⠳⡀⢠⡀⣤⡀⠈⢸⠦⣒⣒⡾⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡇⣗⢸⢬⣆⢮⢧⡕⡶⡋⣾⡀⣾⢐⣵⡹⡈⣡⢣⡾⢹⡗⢹⡀⡀⡀⢿⡼⠐⡀⠔⡀⠠⢩⠷⡀⢘⡇⡀⡀⡀⢾⠲⡁⠁⣠⡃⡀⠭⠃⡀⢸⣡⡴⢼⠏⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⣟⡮⠺⢯⠷⠫⢜⢣⡴⢺⡀⢷⢽⠍⡣⢻⣧⠝⡗⡜⡧⣻⡀⡀⡀⡾⠓⠠⠁⠄⡀⠐⡨⢐⡀⢨⡃⢰⡀⡀⡀⡀⢈⠖⡀⢈⢆⡰⡀⡀⣠⠫⠰⢊⣄⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⢰⣀⢾⠈⣴⣝⣺⣋⣱⠮⣗⡇⢰⡠⠒⢸⣧⢎⢵⢄⡱⣃⣿⡟⡀⡀⡀⡏⡂⠨⡡⠅⠄⡀⡠⡀⡀⠂⠁⡀⠕⡀⣠⠚⠡⣢⢣⠂⡀⢿⠇⣠⢟⠖⠛⠂⢋⣛⢶⢭⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⣠⣖⡫⣙⣝⢫⡹⣾⢵⣁⣂⡤⠤⠒⣃⢸⡗⣹⢀⣿⠞⠬⣸⠋⡅⡧⡇⡀⡀⡀⣟⢦⣈⣀⣀⡀⠰⠁⠊⡢⠊⢀⡤⣾⠛⡀⡀⡀⠒⡀⠄⡀⡀⢈⣉⣚⣩⢗⣹⣏⣓⡩⣀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⣠⣺⢒⡩⣟⠮⣜⢭⡹⡽⡭⣜⡆⣙⡿⣛⢩⢼⣿⡘⡻⠦⡏⡴⡩⡏⡾⡡⡇⡇⡀⡀⡀⣇⡆⠉⠙⠛⠒⠪⢟⣒⣒⣉⢯⢋⢸⣃⣠⣤⣖⣾⠯⠖⡳⢋⡤⡯⡯⢹⡍⢣⣚⣺⣫⣮⣿⣠⡀⡀⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⣀⢖⡳⡳⣫⢭⣩⣝⣝⠭⢮⣔⣞⣞⡞⠦⣳⢁⡪⡛⣼⡏⣘⠅⣾⢹⡥⣱⢱⢞⠔⢑⡇⡀⡀⡀⣷⡇⡀⠠⡀⡀⡀⡀⣗⢼⢨⢸⡊⡘⠛⠉⠉⡀⢀⠴⣥⡺⠛⣒⢼⡭⢲⣱⡭⡯⣩⡫⣫⡚⢵⡵⠲⡀⡀⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⣠⢟⢍⠵⢌⣭⣚⢼⣝⣝⣑⢯⣩⣲⣫⢭⢯⣳⣴⣫⡡⠞⡂⣞⠷⣄⠽⡭⡑⣿⢖⣰⡺⡸⡇⡀⡀⡀⣧⡅⡀⡀⡀⡀⡀⡀⣏⣥⡻⡌⠁⡇⡀⡀⢀⣚⣺⣯⢿⠎⣱⣋⡵⢲⣱⡗⡫⣩⡵⣭⡿⣡⣟⢦⢺⡿⢶⡀⡀⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⣠⠺⢋⣱⡳⡒⣓⡒⢣⠴⡕⠣⠭⢌⣔⣭⣙⡱⢙⠹⡹⡲⠞⡥⠲⢓⢧⡢⡝⣍⣪⢳⣴⢣⡄⡏⡇⡀⡀⡀⡧⡀⡀⡀⡀⡀⡀⡀⣿⣯⣍⠾⠁⠃⢀⠾⡿⢛⣏⣺⣗⣔⣵⠷⣹⡆⠊⢺⢴⡇⣡⣹⠷⡳⢢⣜⡷⣝⡗⡝⣆⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⠉⠎⠚⡠⠶⠧⠦⠮⢬⠌⢍⢭⢭⠭⡢⠷⢎⠚⡙⡼⡸⡩⢦⣊⡭⡳⡵⡎⢞⢆⠿⣜⡱⣺⣼⠊⡀⡀⡀⡀⡏⡀⡀⡀⡀⡀⡀⡀⣿⢚⢼⡀⡀⡤⣿⣿⣷⣟⣷⡯⣉⣻⣛⣓⣛⣓⣒⣲⡢⡫⢽⡭⢪⣗⠬⡣⢨⡗⠭⡡⢹⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠈⠉⠉⠁⠉⠉⠒⠚⠋⠛⠿⠿⠿⠮⠽⢥⠤⢤⢤⣤⣤⣤⠧⣠⣤⡤⡤⠤⠤⠤⠷⠦⠤⠤⠭⠼⠱⠝⠛⠢⠍⠩⠭⠩⠍⠐⠐⡁⠋⠣⠒⠊⠉⠂⠆⢙⠊⠘⠘⠁⠈⠂⠁⡀
// ⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
// swimanonymous
#include <bits/stdc++.h>

using namespace std;

#define IOS                       \
    ios_base::sync_with_stdio(0); \
    cin.tie(0);                   \
    cout.tie(0);
#define endl "\n"
#define int long long
typedef unsigned long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<string, string> pss;
typedef vector<pair<int, int>> vpii;
typedef vector<pair<ll, ll>> vpll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<pii> vii;
typedef vector<ll> vl;
typedef vector<vl> vvl;
#define fi first
#define se second
#define all(arr) arr.begin(), arr.end()
#define MP make_pair
#define pb push_back
#define repeat(i, st, n) for (int i = st; i < n; i++)
const int mod = 1e9 + 7;
int add(int a, int b)
{
    return (((a % mod) + (b % mod)) % mod + mod) % mod;
}
int sub(int a, int b)
{
    return (((a % mod) - (b % mod)) % mod + mod) % mod;
}
int mul(int a, int b)
{
    return (((a % mod) * (b % mod)) % mod + mod) % mod;
}
void remove(std::vector<int> &v)
{
    auto end = v.end();
    for (auto it = v.begin(); it != end; ++it)
    {
        end = std::remove(it + 1, end, *it);
    }

    v.erase(end, v.end());
}
void print(vi &v)
{
    for (auto it : v)
    {
        cout << it << " ";
    }
    cout << endl;
}
int power(int a, int n)
{
    int ans = 1;
    while (n)
    {
        if (n % 2 == 1)
        {
            ans = (ans * a) % mod;
        }
        a = (a * a) % mod;
        n /= 2;
    }
    return ans;
}
int invers(int a)
{
    return power(a, mod - 2);
}
vi Divisors(int x)
{
    vi ans;
    for (int i = 1; i * i <= x; i++)
    {
        if (x % i == 0)
        {
            ans.pb(i);
            if (i * i != x)
                ans.pb(x / i);
        }
    }
    return ans;
}
vpii Factors(int x)
{
    vpii ans;
    for (int i = 2; i * i <= x; i++)
    {
        if (x % i == 0)
        {
            int cnt = 0;
            while (x % i == 0)
            {
                cnt++;
                x /= i;
            }
            ans.pb({i, cnt});
        }
    }
    if (x > 1)
        ans.pb({x, 1});
    return ans;
}
void solve()
{
    int n, k;
    cin >> n >> k;
    vi a(n);
    repeat(i, 0, n) cin >> a[i];
    sort(all(a));
    int cnt = 1, ans = 1;
    for (int i = 1; i < n; ++i)
    {
        if (a[i] - a[i - 1] > k)
            cnt = 1;
        else
            ++cnt;
        ans = max(ans, cnt);
    }
    cout << n - ans << endl;
}

signed main()
{
    IOS

#ifndef ONLINE_JUDGE
        freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif

    int t = 1;
    cin >> t;
    while (t--)
    {
        solve();
    }
    return 0;
}
